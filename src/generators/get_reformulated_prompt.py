import logging
logger = logging.getLogger(__name__)
import json
from src.config import (
    REFORMULATION_PROMPT,
)

def get_reformulated_prompt(api_client, user_prompt):
    """Use AI to reformat and structure the user's prompt"""    
    try:
        # Check if we need to add instructions about generating all files
        if "[COMPLETE PROJECT WITH ALL FILES]" in user_prompt:
            enhanced_prompt = REFORMULATION_PROMPT + """

            Additionally, this project requires that ALL necessary files are generated by AI as part of the architecture. 
            Include instructions to generate every required configuration file (like requirements.txt, package.json), 
            documentation files (README.md), and any other supporting files. No templates should be used - everything 
            should be derived from the requirements.
            """
        else:
            enhanced_prompt = REFORMULATION_PROMPT
            
        response = api_client.call_agent(enhanced_prompt, user_prompt, max_tokens=1000)
        logger.info(f"API response received, length: {len(response) if response else 0}")
        
        if response and "[COMPLETE PROJECT WITH ALL FILES]" in user_prompt and "[COMPLETE PROJECT WITH ALL FILES]" not in response:
            # Make sure the flag is preserved in the reformulated prompt
            response = "[COMPLETE PROJECT WITH ALL FILES] " + response
            
        return response.strip() if response else user_prompt
    except Exception as e:
        logger.error(f"Error reformulating prompt: {str(e)}")
        return user_prompt
